services:
  redis_workers_db:
    image: redis
    restart: always
    command: 'bash -c "redis-server --requirepass xb87Lfxn99C2Dd"'
    ports:
      - "6479:6379"
    networks:
      cupid_net:
        ipv4_address: 172.22.4.4
    volumes:
      - redis_workers:/data

  rabbitmq:
    hostname: "rabbit"
    restart: always
    build:
      context: ./rabbit
      dockerfile: Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 5
    networks:
      cupid_net:
        ipv4_address: 172.22.4.6
    volumes:
      - rabbit_storage:/var/lib/rabbitmq/
      - setup_storage:/setup_cache/

  minio_s3:
    image: minio/minio
    restart: always
    hostname: "cupid_minio"
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: 4nEniXMon98cUQ
      # MINIO_SERVER_URL: "https://s3.cupidai.tech"
      MINIO_NOTIFY_AMQP_ENABLE_RABBIT: "on"
      MINIO_NOTIFY_AMQP_URL_RABBIT: "amqp://cupidai:TUtpjFYSK34xGx@rabbitmq:5672"
      MINIO_NOTIFY_AMQP_EXCHANGE_RABBIT: "amq.direct"
      MINIO_NOTIFY_AMQP_EXCHANGE_TYPE_RABBIT: "direct"
      MINIO_NOTIFY_AMQP_ROUTING_KEY_RABBIT: "minio_uploads"
      MINIO_NOTIFY_AMQP_DURABLE_RABBIT: "on"
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      cupid_net:
        ipv4_address: 172.22.4.7
    volumes:
      - minio_storage:/data

  minio_setup:
    image: minio/mc
    entrypoint: >
      /bin/sh -c "
      mc config host rm local;
      mc config host add --quiet --api s3v4 local http://172.22.4.7:9000 admin 4nEniXMon98cUQ;
      mc admin user svcacct add --access-key "51nwt3Lt3HgspwVP9ax9" --secret-key "RX4itZuqtU4juNTDAdhhbf7uDvRPnVEYEGO5Dd2y" local admin;
      mc mb local/thumbnails;
      mc anonymous set download local/thumbnails;
      mc mb local/deepfake;
      mc anonymous set download local/deepfake;
      mc event add --event "put" local/deepfake arn:minio:sqs::RABBIT:amqp
      "
    networks:
      - cupid_net
    depends_on:
      - minio_s3

networks:
  cupid_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.22.4.0/24
          gateway: 172.22.4.1

volumes:
  redis_workers:
  minio_storage:
  rabbit_storage:
  setup_storage:
